{
  "version": 3,
  "sources": ["../../@vidstack/react/dist/dev/chunks/vidstack-1076613b.js"],
  "sourcesContent": ["\"use client\"\n\nimport { o as onDispose, l as listenEvent, D as DOMEvent, s as scoped } from './vidstack-4571bf12.js';\nimport { T as TextTrack, a as TextTrackSymbol, b as canUsePictureInPicture, d as canUseVideoPresentation, e as canPlayHLSNatively } from './vidstack-e1a5f257.js';\nimport { H as HTMLMediaProvider } from './vidstack-ea7b8f79.js';\nimport 'react';\nimport 'react-dom';\n\nclass NativeHLSTextTracks {\n  constructor(_video, _context) {\n    this._video = _video;\n    this._context = _context;\n    _video.textTracks.onaddtrack = this._onAddTrack.bind(this);\n    onDispose(this._onDispose.bind(this));\n  }\n  _onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this._video, nativeTrack))\n      return;\n    const track = new TextTrack({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label,\n      language: nativeTrack.language,\n      type: \"vtt\"\n    });\n    track[TextTrackSymbol._native] = { track: nativeTrack };\n    track[TextTrackSymbol._readyState] = 2;\n    track[TextTrackSymbol._nativeHLS] = true;\n    let lastIndex = 0;\n    const onCueChange = (event2) => {\n      if (!nativeTrack.cues)\n        return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this._context.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  _onDispose() {\n    this._video.textTracks.onaddtrack = null;\n    for (const track of this._context.textTracks) {\n      const nativeTrack = track[TextTrackSymbol._native]?.track;\n      if (nativeTrack?.oncuechange)\n        nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find((el) => el.track === track);\n}\n\nclass VideoPictureInPicture {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    this._onChange = (active, event) => {\n      this._media.delegate._dispatch(\"picture-in-picture-change\", {\n        detail: active,\n        trigger: event\n      });\n    };\n    listenEvent(this._video, \"enterpictureinpicture\", this._onEnter.bind(this));\n    listenEvent(this._video, \"leavepictureinpicture\", this._onExit.bind(this));\n  }\n  get active() {\n    return document.pictureInPictureElement === this._video;\n  }\n  get supported() {\n    return canUsePictureInPicture(this._video);\n  }\n  async enter() {\n    return this._video.requestPictureInPicture();\n  }\n  exit() {\n    return document.exitPictureInPicture();\n  }\n  _onEnter(event) {\n    this._onChange(true, event);\n  }\n  _onExit(event) {\n    this._onChange(false, event);\n  }\n}\n\nclass VideoPresentation {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    this._mode = \"inline\";\n    listenEvent(this._video, \"webkitpresentationmodechanged\", this._onModeChange.bind(this));\n  }\n  get _supported() {\n    return canUseVideoPresentation(this._video);\n  }\n  async _setPresentationMode(mode) {\n    if (this._mode === mode)\n      return;\n    this._video.webkitSetPresentationMode(mode);\n  }\n  _onModeChange() {\n    const prevMode = this._mode;\n    this._mode = this._video.webkitPresentationMode;\n    {\n      this._media.logger?.infoGroup(\"presentation mode change\").labelledLog(\"Mode\", this._mode).labelledLog(\"Event\", event).dispatch();\n    }\n    this._media.player?.dispatch(\n      new DOMEvent(\"video-presentation-change\", {\n        detail: this._mode,\n        trigger: event\n      })\n    );\n    [\"fullscreen\", \"picture-in-picture\"].forEach((type) => {\n      if (this._mode === type || prevMode === type) {\n        this._media.delegate._dispatch(`${type}-change`, {\n          detail: this._mode === type,\n          trigger: event\n        });\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === \"fullscreen\";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode(\"fullscreen\");\n  }\n  async exit() {\n    this._presentation._setPresentationMode(\"inline\");\n  }\n}\nclass PIPPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === \"picture-in-picture\";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode(\"picture-in-picture\");\n  }\n  async exit() {\n    this._presentation._setPresentationMode(\"inline\");\n  }\n}\n\nclass VideoProvider extends HTMLMediaProvider {\n  constructor(video, context) {\n    super(video);\n    this.$$PROVIDER_TYPE = \"VIDEO\";\n    scoped(() => {\n      if (canUseVideoPresentation(video)) {\n        const presentation = new VideoPresentation(video, context);\n        this.fullscreen = new FullscreenPresentationAdapter(presentation);\n        this.pictureInPicture = new PIPPresentationAdapter(presentation);\n      } else if (canUsePictureInPicture(video)) {\n        this.pictureInPicture = new VideoPictureInPicture(video, context);\n      }\n    }, this.scope);\n  }\n  get type() {\n    return \"video\";\n  }\n  setup(context) {\n    super.setup(context);\n    if (canPlayHLSNatively(this.video)) {\n      new NativeHLSTextTracks(this.video, context);\n    }\n    context.textRenderers._attachVideo(this.video);\n    onDispose(() => {\n      context.textRenderers._attachVideo(null);\n    });\n    if (this.type === \"video\")\n      context.delegate._dispatch(\"provider-setup\", { detail: this });\n  }\n  /**\n   * The native HTML `<video>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement}\n   */\n  get video() {\n    return this._media;\n  }\n}\n\nexport { VideoProvider };\n"],
  "mappings": "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",
  "names": ["event", "event2"]
}
